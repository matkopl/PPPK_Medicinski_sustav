// <auto-generated />
using System;
using MedicinskiSustav.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MedicinskiSustav.Migrations
{
    [DbContext(typeof(MedicinskiDbContext))]
    [Migration("20250530021222_DbProviderChange")]
    partial class DbProviderChange
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MedicinskiSustav.Models.Bolest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DokumentacijaId")
                        .HasColumnType("integer");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("Pocetak")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("Zavrsetak")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("DokumentacijaId");

                    b.ToTable("Bolesti");
                });

            modelBuilder.Entity("MedicinskiSustav.Models.MedicinskaDokumentacija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("PacijentId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PacijentId")
                        .IsUnique();

                    b.ToTable("Dokumentacije");
                });

            modelBuilder.Entity("MedicinskiSustav.Models.Pacijent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("OIB")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("Spol")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OIB")
                        .IsUnique();

                    b.HasIndex("Prezime");

                    b.ToTable("Pacijenti");
                });

            modelBuilder.Entity("MedicinskiSustav.Models.Pregled", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("PacijentId")
                        .HasColumnType("integer");

                    b.Property<string>("SifraPregleda")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<DateTime>("VrijemePregleda")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("PacijentId");

                    b.ToTable("Pregledi");
                });

            modelBuilder.Entity("MedicinskiSustav.Models.Recept", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Lijek")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("PregledId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PregledId");

                    b.ToTable("Recepti");
                });

            modelBuilder.Entity("MedicinskiSustav.Models.Slika", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("PregledId")
                        .HasColumnType("integer");

                    b.Property<string>("Putanja")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.HasIndex("PregledId");

                    b.ToTable("Slike");
                });

            modelBuilder.Entity("MedicinskiSustav.Models.Bolest", b =>
                {
                    b.HasOne("MedicinskiSustav.Models.MedicinskaDokumentacija", "MedicinskaDokumentacija")
                        .WithMany("Bolesti")
                        .HasForeignKey("DokumentacijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MedicinskaDokumentacija");
                });

            modelBuilder.Entity("MedicinskiSustav.Models.MedicinskaDokumentacija", b =>
                {
                    b.HasOne("MedicinskiSustav.Models.Pacijent", "Pacijent")
                        .WithOne("Dokumentacija")
                        .HasForeignKey("MedicinskiSustav.Models.MedicinskaDokumentacija", "PacijentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pacijent");
                });

            modelBuilder.Entity("MedicinskiSustav.Models.Pregled", b =>
                {
                    b.HasOne("MedicinskiSustav.Models.Pacijent", "Pacijent")
                        .WithMany("Pregledi")
                        .HasForeignKey("PacijentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pacijent");
                });

            modelBuilder.Entity("MedicinskiSustav.Models.Recept", b =>
                {
                    b.HasOne("MedicinskiSustav.Models.Pregled", "Pregled")
                        .WithMany("Recepti")
                        .HasForeignKey("PregledId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pregled");
                });

            modelBuilder.Entity("MedicinskiSustav.Models.Slika", b =>
                {
                    b.HasOne("MedicinskiSustav.Models.Pregled", "Pregled")
                        .WithMany("Slike")
                        .HasForeignKey("PregledId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pregled");
                });

            modelBuilder.Entity("MedicinskiSustav.Models.MedicinskaDokumentacija", b =>
                {
                    b.Navigation("Bolesti");
                });

            modelBuilder.Entity("MedicinskiSustav.Models.Pacijent", b =>
                {
                    b.Navigation("Dokumentacija")
                        .IsRequired();

                    b.Navigation("Pregledi");
                });

            modelBuilder.Entity("MedicinskiSustav.Models.Pregled", b =>
                {
                    b.Navigation("Recepti");

                    b.Navigation("Slike");
                });
#pragma warning restore 612, 618
        }
    }
}
